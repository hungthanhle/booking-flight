version: '3.8'

services:
  # MySQL service
  booking-flight-db:
    image: mysql:8.0
    container_name: booking-flight-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - booking-flight-db-data:/var/lib/mysql

  # Rails (web) service
  booking-flight-web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
    container_name: booking-flight-web
    volumes:
      - .:/web/
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - DATABASE_HOST=booking-flight-db
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    depends_on:
      - booking-flight-db
    restart: always

  # NGINX service
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: booking-flight-nginx
    ports:
      - "${NGINX_PORT}:80"
      - "443:443"
    depends_on:
      - booking-flight-web
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    environment:
      - RAILS_ENV=${RAILS_ENV}

volumes:
  booking-flight-db-data:
